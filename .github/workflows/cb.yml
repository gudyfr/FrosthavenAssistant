name: Flutter CI

on: 
  push:
    branches: webserver
    tags: 'v.*.*.*_*_web'

defaults:
  run:
    working-directory: frosthaven_assistant

jobs:
  build-and-release-linux:
    runs-on: ubuntu-latest
            
    steps:
      - uses: actions/checkout@v2      
        with :
          ref: 'webserver'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release      
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: frosthaven-assistant-webserver-linux.zip
          directory: frosthaven_assistant/build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
        with:
          files: frosthaven_assistant/build/linux/x64/release/bundle/frosthaven-assistant-webserver-linux.zip
          
  build-and-release-android:
    runs-on: ubuntu-latest
            
    steps:
      - uses: actions/checkout@v2      
        with :
          ref: 'webserver'
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: release.keystore
          encodedString: ${{ secrets.SECRET_KEYSTORE_B64 }}
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate Apk
        run: flutter build apk --release  
      - name: Sign Android Apk
        run: jarsigner -keystore ${{ steps.decode_keystore.outputs.filePath }} -storepass '${{ secrets.KEYSTORE_PASSWORD }}' -keypass '${{ secrets.KEYSTORE_PASSWORD }}' -sigalg SHA256withRSA -digestalg SHA-256 -signedjar build/app/outputs/apk/release/app-release-signed.apk build/app/outputs/apk/release/*.apk ${{ secrets.KEY_ALIAS }}
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: frosthaven-assistant-webserver-android.zip
          directory:  frosthaven_assistant/build/app/outputs/apk/release/
          path: app-release-signed.apk

      - name: Android Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
        with:
          files: frosthaven_assistant/build/app/outputs/apk/release/frosthaven-assistant-webserver-android.zip

  build-and-release-windows:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: frosthaven_assistant

    steps:
      - uses: actions/checkout@v2
        with :
          ref: 'webserver'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: copy ffmpeg
        run: cp '../release material/ffmpeg.exe' 'build/windows/runner/Release/'
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: frosthaven-assistant-webserver-windows.zip
          directory: frosthaven_assistant/build/windows/runner/Release
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
        with:
          files: frosthaven_assistant/build/windows/runner/Release/frosthaven-assistant-webserver-windows.zip

  build-and-release-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with :
          ref: 'webserver'
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
          flutter-version: '3.10.5'
          cache: true
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: Build artifacts
        run: flutter build macos --release
      - name: Archive Release
        run: |
          cd build/macos/Build/Products/Release/
          ditto -c -k --sequesterRsrc --keepParent X-Haven\ Assistant.app frosthaven-assistant-webserver-macos.zip
      - name: macOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
        with:
          files: frosthaven_assistant/build/macos/Build/Products/Release/frosthaven-assistant-webserver-macos.zip
